// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go
//
// Generated by this command:
//
//	mockgen -source=interface.go -destination=../../mocks/mock_userServcie.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/meshyampratap01/OnlineShoppingCart/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockUserServiceManager is a mock of UserServiceManager interface.
type MockUserServiceManager struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceManagerMockRecorder
	isgomock struct{}
}

// MockUserServiceManagerMockRecorder is the mock recorder for MockUserServiceManager.
type MockUserServiceManagerMockRecorder struct {
	mock *MockUserServiceManager
}

// NewMockUserServiceManager creates a new mock instance.
func NewMockUserServiceManager(ctrl *gomock.Controller) *MockUserServiceManager {
	mock := &MockUserServiceManager{ctrl: ctrl}
	mock.recorder = &MockUserServiceManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserServiceManager) EXPECT() *MockUserServiceManagerMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockUserServiceManager) Login(email, password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", email, password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockUserServiceManagerMockRecorder) Login(email, password any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockUserServiceManager)(nil).Login), email, password)
}

// RegisterUser mocks base method.
func (m *MockUserServiceManager) RegisterUser(name, email, password string, role models.UserRole) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterUser", name, email, password, role)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterUser indicates an expected call of RegisterUser.
func (mr *MockUserServiceManagerMockRecorder) RegisterUser(name, email, password, role any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterUser", reflect.TypeOf((*MockUserServiceManager)(nil).RegisterUser), name, email, password, role)
}
